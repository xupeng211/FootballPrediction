# =================================================================
# 足球预测系统 - Promtail 日志收集配置
# =================================================================

server:
  http_listen_port: 9080
  grpc_listen_port: 0

# 位置配置
positions:
  filename: /tmp/positions.yaml

# 客户端配置 (Loki 连接)
clients:
  - url: http://loki:3100/loki/api/v1/push

# 日志发现配置
scrape_configs:

  # 系统日志收集
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          __path__: /var/log/syslog

  # Nginx 访问日志
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          __path__: /var/log/nginx/football-prediction-access.log

    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>\S+) - (?P<remote_user>\S+) \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"$'
      - timestamp:
          format: "02/Jan/2006:15:04:05 -0700"
          source: time_local
      - labels:
          method:
          status:
          remote_addr:
      - output:
          source: output

  # Nginx 错误日志
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-error
          __path__: /var/log/nginx/football-prediction-error.log

    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<pid>\d+)#(?P<tid>\d+): (?P<message>.*)$'
      - timestamp:
          format: "2006/01/02 15:04:05"
          source: timestamp
      - labels:
          level:
          pid:
      - output:
          source: output

  # 应用程序日志 (Docker 容器)
  - job_name: football-prediction-app
    static_configs:
      - targets:
          - localhost
        labels:
          job: football-prediction-app
          __path__: /var/lib/docker/containers/*/*log

    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:
      - json:
          expressions:
            tag:
          source: attrs
      - regex:
          expression: '(?P<container_name>[^_]+)_(?P<container_id>[a-f0-9]{12})$'
          source: tag
      - timestamp:
          format: RFC3339Nano
          source: time
      - labels:
          stream:
          container_name:
      - output:
          source: output

  # 数据库日志
  - job_name: postgres
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgres
          __path__: /var/log/postgresql/postgresql-15-main.log

    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d+) \[(?P<pid>\d+)\] (?P<level>\w+):\s+(?P<message>.*)$'
      - timestamp:
          format: "2006-01-02 15:04:05.000"
          source: timestamp
      - labels:
          level:
          pid:
      - output:
          source: output

  # Redis 日志
  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          __path__: /var/log/redis/redis-server.log

    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d+:\d+:\d+) (?P<pid>\d+)#(?P<role>\w+) (?P<message>.*)$'
      - timestamp:
          format: "15:04:05"
          source: timestamp
      - labels:
          role:
          pid:
      - output:
          source: output

  # Prometheus 日志
  - job_name: prometheus
    static_configs:
      - targets:
          - localhost
        labels:
          job: prometheus
          __path__: /var/log/prometheus/prometheus.log

    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>ts=\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z) (?P<level>\w+) (?P<component>\S+) (?P<message>.*)$'
      - timestamp:
          format: "2006-01-02T15:04:05.000Z"
          source: timestamp
      - labels:
          level:
          component:
      - output:
          source: output

  # Grafana 日志
  - job_name: grafana
    static_configs:
      - targets:
          - localhost
        labels:
          job: grafana
          __path__: /var/log/grafana/grafana.log

    pipeline_stages:
      - regex:
          expression: '^(?P<level>\w+):(?P<timestamp>ts=\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z) (?P<logger>\S+) (?P<message>.*)$'
      - timestamp:
          format: "2006-01-02T15:04:05.000Z"
          source: timestamp
      - labels:
          level:
          logger:
      - output:
          source: output

  # 应用业务日志
  - job_name: app-business
    static_configs:
      - targets:
          - localhost
        labels:
          job: app-business
          __path__: /app/logs/*.log

    pipeline_stages:
      - json:
          expressions:
            level:
            timestamp:
            logger:
            message:
            user_id:
            request_id:
            trace_id:
            span_id:
      - timestamp:
          format: RFC3339Nano
          source: timestamp
      - labels:
          level:
          logger:
          user_id:
          request_id:
          trace_id:
          span_id:
      - output:
          source: message

  # 审计日志
  - job_name: audit
    static_configs:
      - targets:
          - localhost
        labels:
          job: audit
          __path__: /var/log/app/audit.log

    pipeline_stages:
      - json:
          expressions:
            timestamp:
            user_id:
            action:
            resource:
            ip_address:
            user_agent:
            result:
      - timestamp:
          format: RFC3339Nano
          source: timestamp
      - labels:
            user_id:
            action:
            resource:
            ip_address:
            result:
      - output:
          source: output

# 全局标签
global:
  scrape_interval: 15s
  external_labels:
    cluster: 'football-prediction-prod'
    environment: 'production'