server:
  http_listen_port: 9080
  grpc_listen_port: 9081
  position_file: /tmp/positions.yaml
  clients:
    - url: http://loki:3100/loki/api/v1/push

positions:
  filename: /tmp/positions.yaml

scrape_configs:
  - job_name: system
    static_configs:
      - targets:
        - localhost
        - /var/log/auth.log
        - /var/log/kern.log
        - /var/log/dmesg
        - /var/log/syslog
        - /var/log/messages
    labels:
      job: syslog
      __path__: /var/log/{syslog,messages,kern.log,dmesg,auth.log}

  - job_name: football-prediction
    static_configs:
      - targets:
        - /var/log/football-prediction/app.log
        - /var/log/football-prediction/access.log
        - /var/log/football-prediction/error.log
    labels:
      job: football-prediction
      service: api
      __path__: /var/log/football-prediction/*.log
    pipeline_stages:
      - json:
          expressions:
            - expression: '(?P<timestamp>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d+)'
      - labels:
          level:
            source: level
            regex: 'level=(?P<level>\\w+)'
          module:
            source: module
            regex: 'module=(?P<module>\\w+)'
      - output:
        labels:
          service: football-prediction
          level: "{{ .level }}"
          module: "{{ .module }}"
          logger: "{{ .logger }}"
          timestamp: "{{ .timestamp }}"

  - job_name: nginx
    static_configs:
      - targets:
        - /var/log/nginx/access.log
        - /var/log/nginx/error.log
    labels:
      job: nginx
      service: nginx
      __path__: /var/log/nginx/*.log
    pipeline_stages:
      - regex:
          expression: '(?P<remote_addr>\\S+) - - \\[(?P<timestamp>[^\\]]+)\\] "(?P<method>\\S+) (?P<path>\\S+) [^"]*" (?P<status>\\d{3}) (?P<bytes_sent>\\d+)'
      - labels:
          method:
            source: method
          status:
            source: status
          path:
            source: path
      - output:
        labels:
          service: nginx
          method: "{{ .method }}"
          status: "{{ .status }}"
          path: "{{ .path }}"
          timestamp: "{{ .timestamp }}"

  - job_name: postgres
    static_configs:
      - targets:
        - /var/log/postgresql/postgresql.log
        - /var/log/postgresql/postgresql-15-main.log
    labels:
      job: postgres
      service: database
      __path__: /var/log/postgresql/*.log
    pipeline_stages:
      - regex:
          expression: '\\[(?P<timestamp>[^\\]]+)\\] (?P<pid>\\d+): (?P<level>\\w+): (?P<message>.*)'
      - labels:
          level:
            source: level
          pid:
            source: pid
      - output:
        labels:
          service: postgres
          level: "{{ .level }}"
          pid: "{{ .pid }}"
          timestamp: "{{ .timestamp }}"

  - job_name: redis
    static_configs:
      - targets:
        - /var/log/redis/redis.log
    labels:
      job: redis
      service: cache
      __path__: /var/log/redis/*.log
    pipeline_stanges:
      - regex:
          expression: '(?P<timestamp>\\d+ \\w+ \\d+:\\d+:\\d+\\.\\d+) (?P<pid>\\d+) (?P<level>\\w+) (?P<message>.*)'
      - labels:
          level:
            source: level
      - output:
        labels:
          service: redis
          level: "{{ .level }}"
          timestamp: "{{ .timestamp }}"

  - job_name: celery
    static_configs:
      - targets:
        - /var/log/celery/*.log
        - /var/log/celery/celerybeat.log
        - /var/log/celery/worker-*.log
    labels:
      job: celery
      service: tasks
      __path__: /var/log/celery/*.log
    pipeline_stages:
      - regex:
          expression: '\\[(?P<timestamp>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2},\\d+)\\] (?P<level>\\w+): (?P<task_name>\\[[^\\]]+\\]) (?P<message>.*)'
      - labels:
          level:
            source: level
          task_name:
            source: task_name
      - output:
        labels:
          service: celery
          level: "{{ .level }}"
          task_name: "{{ .task_name }}"
          timestamp: "{{ .timestamp }}"

# 限制配置
limits_config:
  read_buffer_size: 4MiB
  line_limit_truncate: 10MB
  max_line_length: 0
  max_concurrent_pushes: 100
  max_labels_per_batch: 5000
  max_streams_per_user: 1000
  max_stale_stream_configs: 10

# 多租户
client:
  url: http://loki:3100/loki/api/v1/push

# 性能优化
chunk_target_size: 1048576
max_retries: 3
timeout: 10s
