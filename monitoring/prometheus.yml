# =================================================================
# 足球预测系统 - Prometheus 监控配置
# =================================================================

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'football-prediction-prod'
    environment: 'production'

# 规则文件配置
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# 告警管理器配置
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# 监控目标配置
scrape_configs:
  # Prometheus 自监控
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # 主应用监控
  - job_name: 'football-prediction-api'
    static_configs:
      - targets: ['app:8000']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s

    # 指标过滤和标签重写
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'flask_http_request_total'
        target_label: __name__
        replacement: 'http_requests_total'

      - source_labels: [__name__]
        regex: 'flask_request_duration_seconds'
        target_label: __name__
        replacement: 'http_request_duration_seconds'

  # PostgreSQL 数据库监控
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    scrape_timeout: 10s

    # 数据库指标过滤
    metric_relabel_configs:
      - source_labels: [database]
        regex: 'football_prediction.*'
        action: keep

      - source_labels: [__name__]
        regex: 'pg_stat_database.*'
        action: keep

  # Redis 缓存监控
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    scrape_timeout: 10s

    # Redis 指标过滤
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'redis_.*'
        action: keep

      - source_labels: [__name__]
        regex: 'redis_connected_clients|redis_used_memory|redis_keyspace_hits_total|redis_keyspace_misses_total'
        action: keep

  # Nginx 监控
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s
    scrape_timeout: 10s

    # Nginx 指标过滤
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'nginx_.*'
        action: keep

  # Node Exporter (系统监控)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    scrape_timeout: 10s

    # 系统指标过滤
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'node_cpu_seconds_total|node_memory_MemTotal_bytes|node_memory_MemAvailable_bytes|node_filesystem_size_bytes|node_filesystem_avail_bytes|node_network_receive_bytes_total|node_network_transmit_bytes_total'
        action: keep

  # Docker 容器监控
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics

    # 容器指标过滤
    metric_relabel_configs:
      - source_labels: [name]
        regex: 'football-prediction.*'
        action: keep

      - source_labels: [__name__]
        regex: 'container_cpu_usage_seconds_total|container_memory_usage_bytes|container_network_receive_bytes_total|container_network_transmit_bytes_total'
        action: keep

  # Grafana 监控
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 30s
    metrics_path: /metrics
    basic_auth:
      username: admin
      password: ${GRAFANA_PASSWORD}

  # 自定义业务指标
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['app:8000']
    scrape_interval: 60s
    metrics_path: /api/v1/metrics/business

    # 业务指标过滤
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'predictions_.*|matches_.*|users_.*|bets_.*|revenue_.*'
        action: keep

  # 外部服务监控 (黑盒监控)
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://your-domain.com/health
        - https://your-domain.com/api/v1/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # WebSocket 连接监控
  - job_name: 'websocket-metrics'
    static_configs:
      - targets: ['app:8000']
    scrape_interval: 15s
    metrics_path: /realtime/metrics

    # WebSocket 指标过滤
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'websocket_.*'
        action: keep

# 远程写入配置 (长期存储)
remote_write:
  - url: "http://thanos-receive:19291/api/v1/receive"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500

# 远程读取配置 (长期存储查询)
remote_read:
  - url: "http://thanos-query:9090/api/v1/query"
    read_recent: true