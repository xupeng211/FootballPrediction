version: '3.8'

services:
  # Loki日志聚合服务
  loki:
    image: grafana/loki:2.9.4
    container_name: football-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./monitoring/loki/loki.yml:/etc/loki/local-config.yaml
      - loki-data:/tmp/loki
    networks:
      - monitoring
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_SAMPLING_TYPE=const
      - JAEGER_SAMPLING_PARAM=1
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  # Promtail日志收集代理
  promtail:
    image: grafana/promtail:2.9.4
    container_name: football-promtail
    restart: unless-stopped
    volumes:
      - ./monitoring/loki/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:readonly
      - /var/lib/docker/containers:/var/lib/docker/containers:readonly
      - promtail-positions:/tmp/promtail
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    depends_on:
      loki:
        condition: service_healthy
    environment:
      - HOSTNAME=${HOSTNAME:-football-prediction}
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9080/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO对象存储（用于Loki长期存储）
  minio:
    image: minio/minio:RELEASE.2023-12-14T18-51-57Z
    container_name: football-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    networks:
      - monitoring
    environment:
      - MINIO_ROOT_USER=loki
      - MINIO_ROOT_PASSWORD=loki123456
      - MINIO_BROWSER_REDIRECT_URL=http://localhost:9001
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Grafana（已配置Loki数据源）
  grafana:
    image: grafana/grafana:10.2.2
    container_name: football-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=info
      - GF_EXPLORE_ENABLED=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${SMTP_HOST:-localhost:587}
      - GF_SMTP_USER=${SMTP_USER:-alerts@footballprediction.com}
      - GF_SMTP_PASSWORD=${SMTP_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=${SMTP_FROM:-alerts@footballprediction.com}
    depends_on:
      loki:
        condition: service_healthy
      prometheus:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 创建MinIO存储桶的初始化服务
  minio-setup:
    image: minio/mc:RELEASE.2023-12-14T01-16-31Z
    container_name: football-minio-setup
    networks:
      - monitoring
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 30;
      /usr/bin/mc alias set myminio http://minio:9000 loki loki123456;
      /usr/bin/mc mb myminio/loki-chunks;
      /usr/bin/mc mb myminio/loki-ruler;
      /usr/bin/mc mb myminio/loki-admin;
      /usr/bin/mc policy set public myminio/loki-chunks;
      /usr/bin/mc policy set public myminio/loki-ruler;
      /usr/bin/mc policy set public myminio/loki-admin;
      exit 0;
      "
    restart: "no"

volumes:
  loki-data:
    driver: local
  promtail-positions:
    driver: local
  minio-data:
    driver: local
  grafana-data:
    driver: local

networks:
  monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
