# AI开发规则

## 🎯 工具优先原则
- 🚫 **禁止绕过Makefile**: 所有脚本和命令必须通过Makefile执行
- 📋 **必读文档**: 开始工作前必须阅读AI_PROMPT.md和rules.md
- 🔧 **环境依赖**: 所有操作必须在激活的虚拟环境中进行

## 🚀 标准开发启动流程
1. **环境检查**: `make env-check` - 验证开发环境
2. **加载上下文**: `make context` - 加载项目上下文（⭐ 最重要）
3. **选择工具**: 根据任务选择适当的make命令
4. **质量检查**: `make ci` - 确保代码质量

## 📁 目录规范要求
- **源代码**: 必须放在`src/`目录
- **测试代码**: 必须放在`tests/`目录
- **核心逻辑**: `src/core/`
- **服务层**: `src/services/`
- **工具函数**: `src/utils/`

## ✅ 代码质量标准
- **测试覆盖率**: >= 80%
- **类型注解**: 所有公共接口必须有完整类型注解
- **中文注释**: 生成的代码必须包含详细中文注释
- **异常处理**: 必须处理异常和边界情况

## 🔄 提交前检查流程
1. `make lint` - 代码风格检查
2. `make test` - 运行测试套件
3. `make type-check` - 类型检查
4. `make prepush` - 完整提交前检查
5. **🐳 Docker CI模拟**: `./ci-verify.sh` - 模拟GitHub Actions环境

## 🛡️ 严禁操作
- 绕过Makefile直接运行脚本
- 跳过pre-commit检查或CI流程
- 修改代码不写单元测试
- 在main分支直接开发
- 使用`any`类型注解
