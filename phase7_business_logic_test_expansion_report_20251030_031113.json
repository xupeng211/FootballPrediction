{
  "success": true,
  "phase": "Phase 7 Week 3",
  "elapsed_time": "2.1s",
  "analysis_results": {
    "business_analysis": {
      "current_business_coverage": "100.0%",
      "business_test_files_found": 73,
      "valid_business_tests": 70,
      "total_business_tests": 70
    },
    "business_components": {
      "components_by_file": {
        "src/domain/entities.py": [
          {
            "name": "MatchStatus",
            "file": "src/domain/entities.py",
            "line": 11,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "TeamStatus",
            "file": "src/domain/entities.py",
            "line": 21,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "Team",
            "file": "src/domain/entities.py",
            "line": 30,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "Match",
            "file": "src/domain/entities.py",
            "line": 41,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "League",
            "file": "src/domain/entities.py",
            "line": 57,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "Prediction",
            "file": "src/domain/entities.py",
            "line": 68,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "validate_prediction_confidence",
            "file": "src/domain/entities.py",
            "line": 97,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/domain/models/league.py": [
          {
            "name": "LeagueType",
            "file": "src/domain/models/league.py",
            "line": 18,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "LeagueStatus",
            "file": "src/domain/models/league.py",
            "line": 27,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "LeagueSeason",
            "file": "src/domain/models/league.py",
            "line": 37,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "LeagueSettings",
            "file": "src/domain/models/league.py",
            "line": 102,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "League",
            "file": "src/domain/models/league.py",
            "line": 152,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "calculate_points",
            "file": "src/domain/models/league.py",
            "line": 139,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "calculate_revenue_sharing",
            "file": "src/domain/models/league.py",
            "line": 290,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/domain/models/prediction.py": [
          {
            "name": "PredictionStatus",
            "file": "src/domain/models/prediction.py",
            "line": 18,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "ConfidenceScore",
            "file": "src/domain/models/prediction.py",
            "line": 28,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "PredictionScore",
            "file": "src/domain/models/prediction.py",
            "line": 55,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "PredictionPoints",
            "file": "src/domain/models/prediction.py",
            "line": 119,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "Prediction",
            "file": "src/domain/models/prediction.py",
            "line": 149,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "make_prediction",
            "file": "src/domain/models/prediction.py",
            "line": 183,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "get_prediction_summary",
            "file": "src/domain/models/prediction.py",
            "line": 340,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/domain/models/team.py": [
          {
            "name": "TeamType",
            "file": "src/domain/models/team.py",
            "line": 17,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "TeamStats",
            "file": "src/domain/models/team.py",
            "line": 25,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "TeamForm",
            "file": "src/domain/models/team.py",
            "line": 96,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "Team",
            "file": "src/domain/models/team.py",
            "line": 180,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "calculate_strength",
            "file": "src/domain/models/team.py",
            "line": 301,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/domain/models/match.py": [
          {
            "name": "MatchStatus",
            "file": "src/domain/models/match.py",
            "line": 17,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "MatchResult",
            "file": "src/domain/models/match.py",
            "line": 27,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "MatchScore",
            "file": "src/domain/models/match.py",
            "line": 36,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "Match",
            "file": "src/domain/models/match.py",
            "line": 71,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "can_be_predicted",
            "file": "src/domain/models/match.py",
            "line": 229,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/domain/strategies/config.py": [
          {
            "name": "HistoricalConfig",
            "file": "src/domain/strategies/config.py",
            "line": 17,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "MLModelConfig",
            "file": "src/domain/strategies/config.py",
            "line": 23,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "StatisticalConfig",
            "file": "src/domain/strategies/config.py",
            "line": 29,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "EnsembleConfig",
            "file": "src/domain/strategies/config.py",
            "line": 35,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "StrategyConfig",
            "file": "src/domain/strategies/config.py",
            "line": 42,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/domain/strategies/base.py": [
          {
            "name": "StrategyType",
            "file": "src/domain/strategies/base.py",
            "line": 20,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "PredictionInput",
            "file": "src/domain/strategies/base.py",
            "line": 30,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "PredictionOutput",
            "file": "src/domain/strategies/base.py",
            "line": 42,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "StrategyMetrics",
            "file": "src/domain/strategies/base.py",
            "line": 56,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "PredictionStrategy",
            "file": "src/domain/strategies/base.py",
            "line": 67,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "ABC"
            ]
          },
          {
            "name": "PredictionContext",
            "file": "src/domain/strategies/base.py",
            "line": 187,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "to_prediction_input",
            "file": "src/domain/strategies/base.py",
            "line": 212,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/domain/strategies/historical.py": [
          {
            "name": "HistoricalMatch",
            "file": "src/domain/strategies/historical.py",
            "line": 14,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "HistoricalStrategy",
            "file": "src/domain/strategies/historical.py",
            "line": 20,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/domain/strategies/ensemble.py": [
          {
            "name": "EnsembleMethod",
            "file": "src/domain/strategies/ensemble.py",
            "line": 14,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "EnsembleResult",
            "file": "src/domain/strategies/ensemble.py",
            "line": 20,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "EnsembleStrategy",
            "file": "src/domain/strategies/ensemble.py",
            "line": 26,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "StrategyWeight",
            "file": "src/domain/strategies/ensemble.py",
            "line": 32,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/domain/strategies/statistical.py": [
          {
            "name": "StatisticalStrategy",
            "file": "src/domain/strategies/statistical.py",
            "line": 28,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "PredictionStrategy"
            ]
          }
        ],
        "src/domain/strategies/ml_model.py": [
          {
            "name": "MLModelStrategy",
            "file": "src/domain/strategies/ml_model.py",
            "line": 26,
            "type": "class",
            "has_business_methods": true,
            "base_classes": [
              "PredictionStrategy"
            ]
          }
        ],
        "src/domain/strategies/factory.py": [
          {
            "name": "StrategyCreationError",
            "file": "src/domain/strategies/factory.py",
            "line": 27,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Exception"
            ]
          },
          {
            "name": "StrategyConfigurationError",
            "file": "src/domain/strategies/factory.py",
            "line": 33,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Exception"
            ]
          },
          {
            "name": "PredictionStrategyFactory",
            "file": "src/domain/strategies/factory.py",
            "line": 39,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "validate_strategy_config",
            "file": "src/domain/strategies/factory.py",
            "line": 472,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/domain/strategies/domain/strategies/config_ml.py": [
          {
            "name": "MLModelConfig",
            "file": "src/domain/strategies/domain/strategies/config_ml.py",
            "line": 14,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/domain/strategies/domain/strategies/config_ensemble.py": [
          {
            "name": "EnsembleConfig",
            "file": "src/domain/strategies/domain/strategies/config_ensemble.py",
            "line": 14,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/domain/strategies/domain/strategies/historical_historical.py": [
          {
            "name": "HistoricalMatch",
            "file": "src/domain/strategies/domain/strategies/historical_historical.py",
            "line": 9,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "HistoricalStrategy",
            "file": "src/domain/strategies/domain/strategies/historical_historical.py",
            "line": 15,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/domain/strategies/domain/strategies/ensemble_ensemble.py": [
          {
            "name": "EnsembleMethod",
            "file": "src/domain/strategies/domain/strategies/ensemble_ensemble.py",
            "line": 17,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "EnsembleResult",
            "file": "src/domain/strategies/domain/strategies/ensemble_ensemble.py",
            "line": 23,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "EnsembleStrategy",
            "file": "src/domain/strategies/domain/strategies/ensemble_ensemble.py",
            "line": 29,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/domain/strategies/domain/strategies/config_statistical.py": [
          {
            "name": "StatisticalConfig",
            "file": "src/domain/strategies/domain/strategies/config_statistical.py",
            "line": 14,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/domain/strategies/domain/strategies/config_historical.py": [
          {
            "name": "HistoricalConfig",
            "file": "src/domain/strategies/domain/strategies/config_historical.py",
            "line": 14,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/domain/services/prediction_service.py": [
          {
            "name": "PredictionDomainService",
            "file": "src/domain/services/prediction_service.py",
            "line": 25,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "create_prediction",
            "file": "src/domain/services/prediction_service.py",
            "line": 31,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "update_prediction",
            "file": "src/domain/services/prediction_service.py",
            "line": 89,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "evaluate_prediction",
            "file": "src/domain/services/prediction_service.py",
            "line": 126,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "cancel_prediction",
            "file": "src/domain/services/prediction_service.py",
            "line": 162,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "expire_prediction",
            "file": "src/domain/services/prediction_service.py",
            "line": 182,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "adjust_prediction_points",
            "file": "src/domain/services/prediction_service.py",
            "line": 201,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "calculate_prediction_confidence",
            "file": "src/domain/services/prediction_service.py",
            "line": 228,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "validate_prediction_rules",
            "file": "src/domain/services/prediction_service.py",
            "line": 252,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/domain/services/match_service.py": [
          {
            "name": "MatchDomainService",
            "file": "src/domain/services/match_service.py",
            "line": 22,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "validate_match_schedule",
            "file": "src/domain/services/match_service.py",
            "line": 138,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "calculate_match_importance",
            "file": "src/domain/services/match_service.py",
            "line": 164,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/domain/services/scoring_service.py": [
          {
            "name": "ScoringService",
            "file": "src/domain/services/scoring_service.py",
            "line": 15,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "calculate_prediction_points",
            "file": "src/domain/services/scoring_service.py",
            "line": 32,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "calculate_leaderboard_position",
            "file": "src/domain/services/scoring_service.py",
            "line": 184,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "calculate_rank_percentile",
            "file": "src/domain/services/scoring_service.py",
            "line": 195,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/domain/services/team_service.py": [
          {
            "name": "TeamRepositoryProtocol",
            "file": "src/domain/services/team_service.py",
            "line": 16,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Protocol"
            ]
          },
          {
            "name": "TeamStatsEvent",
            "file": "src/domain/services/team_service.py",
            "line": 27,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "TeamProfileUpdatedEvent",
            "file": "src/domain/services/team_service.py",
            "line": 40,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "TeamPerformanceResetEvent",
            "file": "src/domain/services/team_service.py",
            "line": 49,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "TeamDomainService",
            "file": "src/domain/services/team_service.py",
            "line": 56,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "calculate_league_table",
            "file": "src/domain/services/team_service.py",
            "line": 134,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/domain/events/base.py": [
          {
            "name": "DomainEvent",
            "file": "src/domain/events/base.py",
            "line": 15,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "ABC"
            ]
          }
        ],
        "src/domain/events/prediction_events.py": [
          {
            "name": "PredictionCreatedEvent",
            "file": "src/domain/events/prediction_events.py",
            "line": 14,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DomainEvent"
            ]
          },
          {
            "name": "PredictionUpdatedEvent",
            "file": "src/domain/events/prediction_events.py",
            "line": 46,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DomainEvent"
            ]
          },
          {
            "name": "PredictionEvaluatedEvent",
            "file": "src/domain/events/prediction_events.py",
            "line": 79,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DomainEvent"
            ]
          },
          {
            "name": "PredictionCancelledEvent",
            "file": "src/domain/events/prediction_events.py",
            "line": 110,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DomainEvent"
            ]
          },
          {
            "name": "PredictionExpiredEvent",
            "file": "src/domain/events/prediction_events.py",
            "line": 133,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DomainEvent"
            ]
          },
          {
            "name": "PredictionPointsAdjustedEvent",
            "file": "src/domain/events/prediction_events.py",
            "line": 150,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DomainEvent"
            ]
          }
        ],
        "src/domain/events/match_events.py": [
          {
            "name": "MatchStartedEvent",
            "file": "src/domain/events/match_events.py",
            "line": 15,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DomainEvent"
            ]
          },
          {
            "name": "MatchFinishedEvent",
            "file": "src/domain/events/match_events.py",
            "line": 32,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DomainEvent"
            ]
          },
          {
            "name": "MatchCancelledEvent",
            "file": "src/domain/events/match_events.py",
            "line": 64,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DomainEvent"
            ]
          },
          {
            "name": "MatchPostponedEvent",
            "file": "src/domain/events/match_events.py",
            "line": 76,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DomainEvent"
            ]
          }
        ],
        "src/services/enhanced_core.py": [
          {
            "name": "ServiceConfig",
            "file": "src/services/enhanced_core.py",
            "line": 15,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "ServiceMetrics",
            "file": "src/services/enhanced_core.py",
            "line": 34,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "EnhancedBaseService",
            "file": "src/services/enhanced_core.py",
            "line": 60,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "ABC"
            ]
          },
          {
            "name": "BaseService",
            "file": "src/services/enhanced_core.py",
            "line": 242,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "EnhancedBaseService"
            ]
          },
          {
            "name": "AbstractBaseService",
            "file": "src/services/enhanced_core.py",
            "line": 259,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "EnhancedBaseService"
            ]
          }
        ],
        "src/services/audit_service.py": [
          {
            "name": "AuditSeverity",
            "file": "src/services/audit_service.py",
            "line": 17,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "AuditAction",
            "file": "src/services/audit_service.py",
            "line": 26,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "AuditContext",
            "file": "src/services/audit_service.py",
            "line": 38,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "AuditLog",
            "file": "src/services/audit_service.py",
            "line": 53,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "AuditLogSummary",
            "file": "src/services/audit_service.py",
            "line": 70,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "DataSanitizer",
            "file": "src/services/audit_service.py",
            "line": 79,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "SeverityAnalyzer",
            "file": "src/services/audit_service.py",
            "line": 93,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "AuditEvent",
            "file": "src/services/audit_service.py",
            "line": 106,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "AuditService",
            "file": "src/services/audit_service.py",
            "line": 117,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "analyze",
            "file": "src/services/audit_service.py",
            "line": 96,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/services/data_quality_monitor.py": [
          {
            "name": "DataQualityMonitor",
            "file": "src/services/data_quality_monitor.py",
            "line": 18,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/data_processing.py": [
          {
            "name": "DataProcessor",
            "file": "src/services/data_processing.py",
            "line": 17,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "ABC"
            ]
          },
          {
            "name": "MatchDataProcessor",
            "file": "src/services/data_processing.py",
            "line": 26,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DataProcessor"
            ]
          },
          {
            "name": "OddsDataProcessor",
            "file": "src/services/data_processing.py",
            "line": 36,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DataProcessor"
            ]
          },
          {
            "name": "ScoresDataProcessor",
            "file": "src/services/data_processing.py",
            "line": 46,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DataProcessor"
            ]
          },
          {
            "name": "FeaturesDataProcessor",
            "file": "src/services/data_processing.py",
            "line": 56,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "DataProcessor"
            ]
          },
          {
            "name": "DataQualityValidator",
            "file": "src/services/data_processing.py",
            "line": 66,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "AnomalyDetector",
            "file": "src/services/data_processing.py",
            "line": 89,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "MissingDataHandler",
            "file": "src/services/data_processing.py",
            "line": 110,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "MissingScoresHandler",
            "file": "src/services/data_processing.py",
            "line": 118,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "MissingDataHandler"
            ]
          },
          {
            "name": "MissingTeamHandler",
            "file": "src/services/data_processing.py",
            "line": 130,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "MissingDataHandler"
            ]
          },
          {
            "name": "BronzeToSilverProcessor",
            "file": "src/services/data_processing.py",
            "line": 142,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "DataProcessingService",
            "file": "src/services/data_processing.py",
            "line": 170,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "validate",
            "file": "src/services/data_processing.py",
            "line": 72,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/services/content_analysis.py": [
          {
            "name": "ContentType",
            "file": "src/services/content_analysis.py",
            "line": 14,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "UserRole",
            "file": "src/services/content_analysis.py",
            "line": 24,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "Content",
            "file": "src/services/content_analysis.py",
            "line": 33,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "UserProfile",
            "file": "src/services/content_analysis.py",
            "line": 42,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "AnalysisResult",
            "file": "src/services/content_analysis.py",
            "line": 50,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "ContentAnalysisService",
            "file": "src/services/content_analysis.py",
            "line": 70,
            "type": "class",
            "has_business_methods": true,
            "base_classes": [
              "SimpleService"
            ]
          },
          {
            "name": "analyze_text",
            "file": "src/services/content_analysis.py",
            "line": 183,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "analyze_sentiment",
            "file": "src/services/content_analysis.py",
            "line": 258,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/services/auth_service.py": [
          {
            "name": "AuthService",
            "file": "src/services/auth_service.py",
            "line": 29,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/enhanced_data_pipeline.py": [
          {
            "name": "EnhancedDataPipeline",
            "file": "src/services/enhanced_data_pipeline.py",
            "line": 18,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/event_prediction_service.py": [
          {
            "name": "EventDrivenPredictionService",
            "file": "src/services/event_prediction_service.py",
            "line": 29,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "StrategyPredictionService"
            ]
          },
          {
            "name": "EventDrivenMatchService",
            "file": "src/services/event_prediction_service.py",
            "line": 255,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "EventDrivenUserService",
            "file": "src/services/event_prediction_service.py",
            "line": 357,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/strategy_prediction_service.py": [
          {
            "name": "StrategyPredictionService",
            "file": "src/services/strategy_prediction_service.py",
            "line": 28,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "configure_strategy_prediction_services",
            "file": "src/services/strategy_prediction_service.py",
            "line": 449,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/services/smart_data_validator.py": [
          {
            "name": "SmartDataValidator",
            "file": "src/services/smart_data_validator.py",
            "line": 18,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/base_unified.py": [
          {
            "name": "BaseService",
            "file": "src/services/base_unified.py",
            "line": 15,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "ABC"
            ]
          },
          {
            "name": "SimpleService",
            "file": "src/services/base_unified.py",
            "line": 302,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "BaseService"
            ]
          }
        ],
        "src/services/manager.py": [
          {
            "name": "ServiceManager",
            "file": "src/services/manager.py",
            "line": 34,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/user_profile.py": [
          {
            "name": "UserProfile",
            "file": "src/services/user_profile.py",
            "line": 14,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "User",
            "file": "src/services/user_profile.py",
            "line": 32,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "UserProfileService",
            "file": "src/services/user_profile.py",
            "line": 38,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "SimpleService"
            ]
          }
        ],
        "src/services/manager/manager.py": [
          {
            "name": "ServiceManager",
            "file": "src/services/manager/manager.py",
            "line": 34,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/audit_service_mod/audit_service.py": [
          {
            "name": "AuditService",
            "file": "src/services/audit_service_mod/audit_service.py",
            "line": 16,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "DataSanitizer",
            "file": "src/services/audit_service_mod/audit_service.py",
            "line": 68,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "SeverityAnalyzer",
            "file": "src/services/audit_service_mod/audit_service.py",
            "line": 87,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "analyze_severity",
            "file": "src/services/audit_service_mod/audit_service.py",
            "line": 91,
            "type": "function",
            "is_business_function": true
          }
        ],
        "src/services/audit_service_mod/models.py": [
          {
            "name": "AuditAction",
            "file": "src/services/audit_service_mod/models.py",
            "line": 12,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "AuditSeverity",
            "file": "src/services/audit_service_mod/models.py",
            "line": 24,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "AuditEvent",
            "file": "src/services/audit_service_mod/models.py",
            "line": 34,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/processing/processors/match_processor.py": [
          {
            "name": "MatchProcessor",
            "file": "src/services/processing/processors/match_processor.py",
            "line": 15,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/processing/processors/odds/transformer.py": [
          {
            "name": "ExampleClass",
            "file": "src/services/processing/processors/odds/transformer.py",
            "line": 11,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/processing/processors/odds/processor.py": [
          {
            "name": "ExampleClass",
            "file": "src/services/processing/processors/odds/processor.py",
            "line": 11,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/processing/processors/odds/validator.py": [
          {
            "name": "ExampleClass",
            "file": "src/services/processing/processors/odds/validator.py",
            "line": 11,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/processing/processors/odds/aggregator.py": [
          {
            "name": "ExampleClass",
            "file": "src/services/processing/processors/odds/aggregator.py",
            "line": 11,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/processing/processors/features/calculator.py": [
          {
            "name": "ExampleClass",
            "file": "src/services/processing/processors/features/calculator.py",
            "line": 11,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/processing/processors/features/processor.py": [
          {
            "name": "ExampleClass",
            "file": "src/services/processing/processors/features/processor.py",
            "line": 11,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/processing/processors/features/validator.py": [
          {
            "name": "ExampleClass",
            "file": "src/services/processing/processors/features/validator.py",
            "line": 11,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/processing/processors/features/aggregator.py": [
          {
            "name": "ExampleClass",
            "file": "src/services/processing/processors/features/aggregator.py",
            "line": 11,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/processing/validators/data_validator.py": [
          {
            "name": "DataValidator",
            "file": "src/services/processing/validators/data_validator.py",
            "line": 16,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/processing/caching/processing_cache.py": [
          {
            "name": "ProcessingCache",
            "file": "src/services/processing/caching/processing_cache.py",
            "line": 17,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          }
        ],
        "src/services/processing/caching/config/cache_config.py": [
          {
            "name": "CacheConfig",
            "file": "src/services/processing/caching/config/cache_config.py",
            "line": 11,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/processing/caching/base/base_cache.py": [
          {
            "name": "BaseCache",
            "file": "src/services/processing/caching/base/base_cache.py",
            "line": 11,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "ABC"
            ]
          },
          {
            "name": "CacheKeyManager",
            "file": "src/services/processing/caching/base/base_cache.py",
            "line": 40,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/database/database_service.py": [
          {
            "name": "DatabaseService",
            "file": "src/services/database/database_service.py",
            "line": 16,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/betting/enhanced_ev_calculator.py": [
          {
            "name": "KellyOptimizationResult",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 111,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "EnhancedValueRating",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 123,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "EnhancedKellyCalculator",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 136,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "EnhancedValueRatingCalculator",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 402,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "EnhancedEVCalculator",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 651,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "calculate_fractional_kelly",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 148,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "calculate_enhanced_value_rating",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 417,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "calculate_enhanced_ev",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 718,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "BetType",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 46,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "RiskLevel",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 54,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "BettingOdds",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 61,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "PredictionProbabilities",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 71,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "EVCalculation",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 81,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "BettingStrategy",
            "file": "src/services/betting/enhanced_ev_calculator.py",
            "line": 96,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          }
        ],
        "src/services/betting/ev_calculator.py": [
          {
            "name": "BetType",
            "file": "src/services/betting/ev_calculator.py",
            "line": 44,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "RiskLevel",
            "file": "src/services/betting/ev_calculator.py",
            "line": 56,
            "type": "class",
            "has_business_methods": false,
            "base_classes": [
              "Enum"
            ]
          },
          {
            "name": "BettingOdds",
            "file": "src/services/betting/ev_calculator.py",
            "line": 66,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "PredictionProbabilities",
            "file": "src/services/betting/ev_calculator.py",
            "line": 87,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "EVCalculation",
            "file": "src/services/betting/ev_calculator.py",
            "line": 116,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "BettingStrategy",
            "file": "src/services/betting/ev_calculator.py",
            "line": 136,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "EVCalculator",
            "file": "src/services/betting/ev_calculator.py",
            "line": 154,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "BettingStrategyOptimizer",
            "file": "src/services/betting/ev_calculator.py",
            "line": 321,
            "type": "class",
            "has_business_methods": true,
            "base_classes": []
          },
          {
            "name": "BettingRecommendationEngine",
            "file": "src/services/betting/ev_calculator.py",
            "line": 486,
            "type": "class",
            "has_business_methods": false,
            "base_classes": []
          },
          {
            "name": "calculate_ev",
            "file": "src/services/betting/ev_calculator.py",
            "line": 172,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "calculate_kelly_fraction",
            "file": "src/services/betting/ev_calculator.py",
            "line": 178,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "calculate_value_rating",
            "file": "src/services/betting/ev_calculator.py",
            "line": 217,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "calculate_expected_roi",
            "file": "src/services/betting/ev_calculator.py",
            "line": 231,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "calculate_bust_probability",
            "file": "src/services/betting/ev_calculator.py",
            "line": 237,
            "type": "function",
            "is_business_function": true
          },
          {
            "name": "calculate_comprehensive_ev",
            "file": "src/services/betting/ev_calculator.py",
            "line": 276,
            "type": "function",
            "is_business_function": true
          }
        ]
      },
      "total_components": 200,
      "files_analyzed": 2
    },
    "business_test_expansion": {
      "tests_generated": 600,
      "business_components_tested": 200,
      "test_files_created": 57
    },
    "business_integration": {
      "integration_status": "✅ 集成测试通过",
      "integration_files": [
        "tests/unit/domain: 42 个文件",
        "tests/unit/services: 64 个文件",
        "tests/integration: 36 个文件"
      ],
      "simple_business_test": "✅ 通过",
      "status": "integration_verified"
    },
    "business_report": {
      "business_coverage": "已扩展",
      "test_files_covered": 58,
      "status": "tests_generated"
    }
  },
  "summary": {
    "current_business_coverage": "100.0%",
    "target_business_coverage": "70%+",
    "tests_generated": 57,
    "business_components_tested": 200,
    "business_integration_status": "✅ 集成测试通过"
  },
  "recommendations": [
    "📈 继续扩展业务逻辑测试至70%+覆盖率",
    "🔧 优化业务规则验证和边界条件处理",
    "📊 建立业务性能监控和基准测试",
    "🔄 集成业务流程端到端测试",
    "🚀 准备业务逻辑文档和API规范"
  ]
}