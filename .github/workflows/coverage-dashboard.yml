name: Coverage Dashboard

on:
  schedule:
    - cron: "0 2 * * 5"   # 每周五凌晨 2 点运行
  workflow_dispatch:       # 允许手动触发

jobs:
  dashboard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-coverage-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-coverage-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
          pip install -e .

      - name: Run tests and generate coverage reports
        run: |
          pytest --cov=src --cov-report=json:coverage.json --cov-report=xml --cov-report=term --maxfail=5 --disable-warnings

      - name: Generate Quality Snapshot
        run: |
          python scripts/generate_quality_snapshot.py
          echo "✅ 质量快照生成完成"

      - name: Update Quality Dashboard
        run: |
          python scripts/update_quality_dashboard.py
          echo "✅ 质量看板更新完成"

      - name: Generate Quality Badges
        run: |
          python scripts/generate_badges.py --all
          echo "✅ 质量徽章生成完成"

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-dashboard-${{ github.run_number }}
          path: |
            coverage.json
            coverage.xml
            htmlcov/
            docs/_reports/QUALITY_SNAPSHOT.json
            docs/_reports/TEST_COVERAGE_KANBAN.md
            docs/_reports/badges/
          retention-days: 30

      - name: Commit and push dashboard updates
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "coverage-bot"
          git config --global user.email "coverage-bot@example.com"

          # 添加所有生成的文件
          git add coverage.json
          git add docs/_reports/QUALITY_SNAPSHOT.json
          git add docs/_reports/TEST_COVERAGE_KANBAN.md
          git add docs/_reports/badges/

          # 检查是否有变更
          if ! git diff-index --quiet HEAD; then
            git commit -m "chore(coverage): update coverage dashboard and quality metrics [skip ci]

          🤖 Automated coverage dashboard update:
          - Coverage data generated and analyzed
          - Quality snapshot updated
          - Quality dashboard synchronized
          - Quality badges regenerated

          📊 Run ID: ${{ github.run_number }}
          ⏰ Timestamp: $(date -u)"
            git push origin HEAD:${GITHUB_REF}
            echo "✅ 覆盖率仪表板已更新"
          else
            echo "ℹ️  覆盖率数据无变更，跳过提交"