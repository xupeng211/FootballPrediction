name: AI自动修复机器人

on:
  issues:
    types: [opened]
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

jobs:
  auto-fix-issues:
    name: 自动修复Issue
    if: |
      github.event_name == 'issues' &&
      (contains(github.event.issue.labels.*.name, 'auto-fixable') ||
       contains(github.event.issue.title, '[AI]'))
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout代码
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}

      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements/requirements.lock
            pyproject.toml

      - name: 安装依赖
        run: |
          pip install --upgrade pip
          pip install -r requirements/requirements.lock
          pip install ruff mypy bandit pip-audit pytest

      - name: AI自动修复
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          echo "启动AI自动修复机器人..."
          echo "Issue: $ISSUE_NUMBER"

          if [ -f "scripts/ai_auto_fixer.py" ]; then
            python3 scripts/ai_auto_fixer.py --target all --confidence 0.6 || echo "AI修复尝试完成"
          else
            ruff check --fix src/ || echo "基础修复尝试完成"
          fi

      - name: 生成修复报告
        if: always()
        run: |
          mkdir -p fix_reports
          echo "# AI自动修复报告" > fix_reports/auto_fix_report.md
          echo "**修复时间**: $(date)" >> fix_reports/auto_fix_report.md
          echo "**Issue**: #${{ github.event.issue.number }}" >> fix_reports/auto_fix_report.md
          echo "## 修复统计" >> fix_reports/auto_fix_report.md
          echo "- 修复尝试: 已执行" >> fix_reports/auto_fix_report.md
          echo "- 文件检查: 已完成" >> fix_reports/auto_fix_report.md
          echo "此报告由AI自动修复机器人生成" >> fix_reports/auto_fix_report.md

      - name: 上传修复报告
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: auto-fix-report
          path: fix_reports/
          retention-days: 30

  auto-fix-pr:
    name: PR自动修复
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout代码
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements/requirements.lock
            pyproject.toml

      - name: 安装依赖
        run: |
          pip install --upgrade pip
          pip install -r requirements/requirements.lock
          pip install ruff mypy bandit pip-audit pytest

      - name: AI自动修复PR
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          echo "分析PR: $PR_NUMBER"

          if [ -f "scripts/smart_quality_fixer.py" ]; then
            python3 scripts/smart_quality_fixer.py --auto-fix || echo "智能修复尝试完成"
          fi

          if [ -f "scripts/ai_auto_fixer.py" ]; then
            python3 scripts/ai_auto_fixer.py --target all --confidence 0.6 || echo "AI修复尝试完成"
          fi

          ruff check --fix src/ || echo "基础修复尝试完成"

          if [ -n "$(git status --porcelain)" ]; then
            echo "发现可修复的问题，尝试自动修复..."

            git config --global user.name "AI Auto Fixer"
            git config --global user.email "ai-fixer@actions.users.noreply.github.com"

            git add .
            git commit -m "AI自动修复 PR代码质量问题"

            git push

            echo "自动修复已提交到PR分支"
          else
            echo "未发现可自动修复的问题"
          fi

      - name: 生成PR修复报告
        if: always()
        run: |
          mkdir -p pr_fix_reports
          echo "# PR自动修复报告" > pr_fix_reports/pr_fix_report.md
          echo "**PR**: #${{ github.event.pull_request.number }}" >> pr_fix_reports/pr_fix_report.md
          echo "**时间**: $(date)" >> pr_fix_reports/pr_fix_report.md
          echo "## 修复统计" >> pr_fix_reports/pr_fix_report.md
          echo "- 检查完成: 是" >> pr_fix_reports/pr_fix_report.md
          echo "- 修复应用: 已尝试" >> pr_fix_reports/pr_fix_report.md
          echo "此报告由AI自动修复机器人生成" >> pr_fix_reports/pr_fix_report.md

      - name: 上传PR修复报告
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pr-fix-report
          path: pr_fix_reports/
          retention-days: 30