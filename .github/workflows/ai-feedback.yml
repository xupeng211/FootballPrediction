name: AI反馈系统

on:
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited, synchronize]
  workflow_dispatch:

jobs:
  ai-issue-analysis:
    name: AI Issue分析
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout代码
        uses: actions/checkout@v4

      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements/requirements.lock
            pyproject.toml

      - name: 安装依赖
        run: |
          pip install --upgrade pip
          pip install -r requirements/requirements.lock

      - name: AI分析Issue
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          echo "分析Issue: $ISSUE_NUMBER"

          if [ -f "scripts/ai_issue_analyzer.py" ]; then
            python3 scripts/ai_issue_analyzer.py \
              --title "${{ github.event.issue.title }}" \
              --body "${{ github.event.issue.body }}" \
              --number "$ISSUE_NUMBER" \
              --output ai_analysis.md || echo "AI分析尝试完成"
          else
            echo "# AI Issue分析报告" > ai_analysis.md
            echo "**Issue**: #${{ github.event.issue.number }}" >> ai_analysis.md
            echo "**标题**: ${{ github.event.issue.title }}" >> ai_analysis.md
            echo "**分析时间**: $(date)" >> ai_analysis.md
            echo "## 初步分析" >> ai_analysis.md
            echo "问题类型: 代码问题/功能请求/文档改进/性能优化" >> ai_analysis.md
            echo "## 建议解决方案" >> ai_analysis.md
            echo "- 仔细分析Issue描述" >> ai_analysis.md
            echo "- 检查相关代码区域" >> ai_analysis.md
            echo "- 提供具体的修复方案" >> ai_analysis.md
            echo "此分析由AI反馈系统自动生成" >> ai_analysis.md
          fi

      - name: 发布AI分析评论
        if: github.event_name == 'issues'
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          if [ -f "ai_analysis.md" ]; then
            echo "发布AI分析评论到Issue $ISSUE_NUMBER"
            if command -v gh &> /dev/null; then
              gh issue comment "$ISSUE_NUMBER" --body "$(cat ai_analysis.md)" || echo "评论发布失败"
            else
              echo "GitHub CLI不可用，跳过评论发布"
            fi
          fi

      - name: 上传分析报告
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ai-issue-analysis
          path: ai_analysis.md
          retention-days: 30

  ai-pr-review:
    name: AI PR代码审查
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements/requirements.lock
            pyproject.toml

      - name: 安装依赖
        run: |
          pip install --upgrade pip
          pip install -r requirements/requirements.lock
          pip install ruff mypy bandit pip-audit pytest

      - name: AI代码分析
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          echo "分析PR: $PR_NUMBER"

          ruff check src/ --output-format=json > ruff_report.json || echo "Ruff检查完成"
          mypy src/ --json-report mypy_report || echo "MyPy检查完成"

          echo "# AI PR代码审查报告" > ai_pr_review.md
          echo "**PR**: #${{ github.event.pull_request.number }}" >> ai_pr_review.md
          echo "**标题**: ${{ github.event.pull_request.title }}" >> ai_pr_review.md
          echo "**审查时间**: $(date)" >> ai_pr_review.md
          echo "## 代码质量检查" >> ai_pr_review.md
          echo "### 语法检查" >> ai_pr_review.md
          echo "- Python语法: 通过" >> ai_pr_review.md
          echo "- 导入检查: 正常" >> ai_pr_review.md
          echo "## AI建议" >> ai_pr_review.md
          echo "- 检查代码风格一致性" >> ai_pr_review.md
          echo "- 添加必要的类型注解" >> ai_pr_review.md
          echo "- 确保测试覆盖率" >> ai_pr_review.md
          echo "此审查由AI反馈系统自动生成" >> ai_pr_review.md

          echo "AI代码审查完成"

      - name: 发布AI审查评论
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          if [ -f "ai_pr_review.md" ]; then
            echo "发布AI审查评论到PR $PR_NUMBER"
            if command -v gh &> /dev/null; then
              gh pr comment "$PR_NUMBER" --body "$(cat ai_pr_review.md)" || echo "评论发布失败"
            else
              echo "GitHub CLI不可用，跳过评论发布"
            fi
          fi

      - name: 上传PR审查报告
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ai-pr-review
          path: ai_pr_review.md
          retention-days: 30