name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: football_prediction_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          .venv
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        make install

    - name: Environment check
      run: |
        make env-check

    - name: Run linting
      run: |
        make lint

    - name: Run type checking
      run: |
        make type-check

    - name: Run unit tests
      run: |
        make test-unit

    - name: Run integration tests
      run: |
        make test-int
      env:
        DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/football_prediction_test
        REDIS_URL: redis://localhost:6379/1

    - name: Generate coverage report
      run: |
        make coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        make install

    - name: Run security check
      run: |
        make security-check

    - name: Run license check
      run: |
        make license-check

  e2e:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        make install

    - name: Build Docker image
      run: |
        docker-compose -f docker-compose.test.yml build

    - name: Run E2E tests
      run: |
        docker-compose -f docker-compose.test.yml up --abort-on-container-exit --exit-code-from app

    - name: Collect test results
      if: always()
      run: |
        docker-compose -f docker-compose.test.yml logs app > e2e-test.log

    - name: Upload test results
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: e2e-test-logs
        path: e2e-test.log