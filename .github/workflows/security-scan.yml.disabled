name: 安全扫描

on:
  workflow_call:
    inputs:
      scan_type:
        description: "扫描类型"
        required: false
        default: "full"
        type: choice
        options:
          - full
          - quick
  workflow_dispatch:
    inputs:
      scan_type:
        description: "扫描类型"
        required: false
        default: "full"
        type: choice
        options:
          - full
          - quick
  schedule:
    # 每日凌晨 2 点 UTC 运行
    - cron: '0 2 * * *'

jobs:
  security-scan:
    name: 安全扫描
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        scanner: [trivy, bandit, safety]

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6

      - name: 设置 Python
        uses: actions/setup-python@v4.7.1
        if: matrix.scanner == 'bandit' || matrix.scanner == 'safety'
        with:
          python-version: "3.11"

      - name: 运行 Trivy 漏洞扫描
        if: matrix.scanner == 'trivy'
        uses: aquasecurity/trivy-action@v0.20.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'
        env:
          TRIVY_SEVERITY: HIGH,CRITICAL

      - name: 上传 Trivy 扫描结果到 GitHub Security
        if: matrix.scanner == 'trivia' && always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      - name: 安装安全工具
        if: matrix.scanner == 'bandit' || matrix.scanner == 'safety'
        run: |
          pip install bandit safety

      - name: 运行 Bandit 代码安全扫描
        if: matrix.scanner == 'bandit'
        run: |
          bandit -r src/ -f json -o bandit-report.json
          bandit -r src/ -f txt -o bandit-report.txt
        continue-on-error: true

      - name: 上传 Bandit 报告
        if: matrix.scanner == 'bandit' && always()
        uses: actions/upload-artifact@v3
        with:
          name: bandit-reports
          path: |
            bandit-report.json
            bandit-report.txt

      - name: 检查依赖安全漏洞
        if: matrix.scanner == 'safety'
        run: |
          safety check --json --output safety-report.json
          safety check --text --output safety-report.txt
        continue-on-error: true

      - name: 上传 Safety 报告
        if: matrix.scanner == 'safety' && always()
        uses: actions/upload-artifact@v3
        with:
          name: safety-reports
          path: |
            safety-report.json
            safety-report.txt

  # 定时任务：生成安全报告
  generate-security-report:
    name: 生成安全报告
    runs-on: ubuntu-latest
    needs: security-scan
    if: github.event_name == 'schedule'
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6

      - name: 生成安全报告
        run: |
          echo "# 安全扫描报告" > security-report.md
          echo "" >> security-report.md
          echo "生成时间: $(date)" >> security-report.md
          echo "" >> security-report.md
          echo "## 扫描结果摘要" >> security-report.md
          echo "- Trivy 漏洞扫描" >> security-report.md
          echo "- Bandit 代码安全" >> security-report.md
          echo "- Safety 依赖安全" >> security-report.md

      - name: 上传报告
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md
