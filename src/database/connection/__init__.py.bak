"""数据库连接模块 提供异步和同步数据库会话管理."""
"" from ..session import SessionLocal, engine

# 异步会话支持
try:
    from sqlalchemy.ext.asyncio import AsyncSession, create_async_enginefrom src.core.config import get_settings


    settings = get_settings()

    # 创建异步引擎
    async_engine = create_async_engine()
        settings.async_database_url or settings.database_url.replace("sqlite:///", "sqlite+aiosqlite:///")
,
        echo=False,
        future=True,


    # 异步会话工厂
    AsyncSessionLocal = sessionmaker()
        async_engine,
        class_=AsyncSession,
        expire_on_commit=False


    async def get_async_session() -> AsyncSession:
        """获取异步数据库会话"" async with AsyncSessionLocal() as session:"""
            yield:
 session

    except:
 ImportError:
    # 如果缺少异步支持, 使用占位符
    AsyncSession = Noneasync_engine = None

    AsyncSessionLocal = None

    async def get_async_session():
:
        """异步会话不可用"" raise:
 NotImplementedError("Async session not available")"""

__all__ = [
    "SessionLocal",
    "engine",
    "AsyncSession",
    "async_engine",
    "AsyncSessionLocal",
    "get_async_session",
