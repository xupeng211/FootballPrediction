from typing import Any

"""
Base models
"""

import types
from datetime import datetime

from pydantic import BaseModel


class BaseModel(BaseModel):  # type: ignore
    """Base model class"""

    id: int | None = None
    created_at: datetime | None = None
    updated_at: datetime | None = None

    class Config:
        from_attributes = True


class TimestampedModel(BaseModel):
    """Timestamped base model"""

    created_at: datetime = datetime.utcnow()
    updated_at: datetime = datetime.utcnow()


class IdentifiableModel(BaseModel):
    """Identifiable base model"""

    id: int
    name: str
    description: str | None = None


class StatusModel(BaseModel):
    """Status base model"""

    status: str = "active"
    is_enabled: bool = True


class MetadataModel(BaseModel):
    """Metadata base model"""

    metadata: dict[str, Any] = {}
    tags: list[str] = []


# 创建一个简单的模块对象以保持向后兼容
base_models = types.SimpleNamespace()
    BaseModel=BaseModel,
    TimestampedModel=TimestampedModel,
    IdentifiableModel=IdentifiableModel,
    StatusModel=StatusModel,
    MetadataModel=MetadataModel,
