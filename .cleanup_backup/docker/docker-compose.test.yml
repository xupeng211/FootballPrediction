# Docker Compose for Test Environment
# 专门用于测试环境的轻量级服务配置，仅包含CI测试必需的服务

version: '3.8'

services:
  # PostgreSQL数据库 - 测试环境
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: football_prediction_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d football_prediction_test"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    tmpfs:
      - /var/lib/postgresql/data
    restart: unless-stopped

  # Redis缓存服务 - 测试环境
  redis:
    image: redis:7-alpine
    # ports:
    #   - "6379:6379"  # 移除外部端口映射，仅内部网络访问
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    tmpfs:
      - /data
    restart: unless-stopped

  # Kafka消息队列 - 测试环境 (匹配GitHub Actions CI配置)
  kafka:
    image: bitnami/kafka:3.6.1
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server=localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    tmpfs:
      - /bitnami/kafka
    restart: unless-stopped

networks:
  default:
    name: football_test_network
    driver: bridge
