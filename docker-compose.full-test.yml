# =================================================================
# 足球预测系统 - 完整服务栈集成测试
# =================================================================

services:
  # PostgreSQL 数据库
  db:
    image: postgres:15-alpine
    container_name: football-db-fulltest
    environment:
      POSTGRES_DB: football_prediction_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C"
    volumes:
      - postgres_fulltest_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    ports:
      - "5434:5432"
    restart: unless-stopped
    networks:
      - football-fulltest-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d football_prediction_test"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: football-redis-fulltest
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_fulltest_data:/data
    ports:
      - "6381:6379"
    restart: unless-stopped
    networks:
      - football-fulltest-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # 模拟足球预测应用服务
  app:
    image: nginx:alpine
    container_name: football-app-fulltest
    volumes:
      - ./test/mock-app:/usr/share/nginx/html:ro
      - ./test/nginx-app.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8001:80"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - football-fulltest-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 负载均衡器
  nginx:
    image: nginx:alpine
    container_name: football-nginx-fulltest
    volumes:
      - ./test/nginx-lb.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "8081:80"
      - "8444:443"
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - football-fulltest-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus 监控
  prometheus:
    image: prom/prometheus:latest
    container_name: football-prometheus-fulltest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=1d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_fulltest_data:/prometheus
      - ./test/prometheus-targets.yml:/etc/prometheus/targets.yml:ro
    ports:
      - "9092:9090"
    restart: unless-stopped
    networks:
      - football-fulltest-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana 可视化
  grafana:
    image: grafana/grafana:latest
    container_name: football-grafana-fulltest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=fulltest123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_SECURITY_ALLOW_EMBEDDING=true
    volumes:
      - grafana_fulltest_data:/var/lib/grafana
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./test/grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
    ports:
      - "3003:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - football-fulltest-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 日志聚合服务
  loki:
    image: grafana/loki:latest
    container_name: football-loki-fulltest
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_fulltest_data:/loki
    ports:
      - "3101:3100"
    restart: unless-stopped
    networks:
      - football-fulltest-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 日志收集服务
  promtail:
    image: grafana/promtail:latest
    container_name: football-promtail-fulltest
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml:ro
      - ./test/logs:/var/log/test:ro
      - /var/log:/var/log:ro
    depends_on:
      - loki
    restart: unless-stopped
    networks:
      - football-fulltest-network

  # 压力测试服务
  load-test:
    image: alpine:latest
    container_name: football-loadtest-fulltest
    command: >
      sh -c "
      apk add --no-cache curl ab &&
      while true; do
        echo '=== Load Test $(date) ===' &&
        echo 'Testing application endpoints...' &&
        curl -s http://nginx/health | head -1 &&
        ab -n 100 -c 10 http://nginx/health 2>/dev/null | grep 'Requests per second' || echo 'Load test failed' &&
        echo 'Testing database connection...' &&
        pg_isready -h db -p 5432 -U postgres -d football_prediction_test || echo 'DB connection failed' &&
        echo 'Testing Redis connection...' &&
        redis-cli -h redis -p 6379 ping || echo 'Redis connection failed' &&
        echo '================================' &&
        sleep 120;
      done
      "
    depends_on:
      - nginx
      - db
      - redis
    networks:
      - football-fulltest-network
    restart: unless-stopped

volumes:
  postgres_fulltest_data:
    driver: local
  redis_fulltest_data:
    driver: local
  prometheus_fulltest_data:
    driver: local
  grafana_fulltest_data:
    driver: local
  loki_fulltest_data:
    driver: local

networks:
  football-fulltest-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/16